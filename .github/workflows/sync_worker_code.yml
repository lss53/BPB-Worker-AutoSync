name: 同步上游 Worker 代码 (Zip 解压版)

on:
  schedule:
    - cron: '0 2 * * 1'   # 每周一02:00 UTC运行一次
  workflow_dispatch:      # 允许手动触发

jobs:
  update:
    runs-on: ubuntu-latest
    
    # 授予写入权限，以便 git push 成功
    permissions:
      contents: write

    steps:
      - name: Checkout 仓库
        uses: actions/checkout@v4
        
      - name: 检查版本并获取最新版本
        id: check_versions
        run: |
          # 1. 获取最新正式版标签
          LATEST_TAG=$(curl -s https://api.github.com/repos/bia-pain-bache/BPB-Worker-Panel/releases/latest | jq -r '.tag_name')
          if [ -z "$LATEST_TAG" ]; then
            echo "未找到最新正式发布版本，退出。"
            exit 1
          fi
          echo "最新版本: $LATEST_TAG"
          
          # 2. 获取本地版本
          if [ -f "version.txt" ]; then
            CURRENT_VERSION=$(cat version.txt | tr -d '\n' | tr -d '\r')
          else
            CURRENT_VERSION=""
          fi
          echo "当前本地版本: ${CURRENT_VERSION:-未找到}"
          
          # 3. 比较版本，设置是否需要更新
          if [ "$CURRENT_VERSION" = "$LATEST_TAG" ]; then
            echo "No update needed."
            echo "need_update=false" >> $GITHUB_ENV
          else
            echo "Update needed."
            echo "latest_tag=$LATEST_TAG" >> $GITHUB_ENV
            echo "need_update=true" >> $GITHUB_ENV
          fi

      - name: 下载并解压 worker.zip
        # 仅在需要更新时执行此步骤
        if: env.need_update == 'true'
        run: |
          # 确保安装 unzip 工具
          sudo apt-get update && sudo apt-get install -y unzip
          
          DOWNLOAD_URL="https://github.com/bia-pain-bache/BPB-Worker-Panel/releases/download/${{ env.latest_tag }}/worker.zip"
          TEMP_ZIP="worker_temp.zip"
          
          echo "正在下载文件: $DOWNLOAD_URL"
          # 下载 zip 文件
          curl -L -o "$TEMP_ZIP" "$DOWNLOAD_URL"
          
          echo "正在解压文件..."
          # 解压 zip 文件到当前目录，这将生成 _worker.js
          unzip -o "$TEMP_ZIP"
          
          # 删除临时下载的 zip 文件
          rm "$TEMP_ZIP"
          
          echo "解压完成，已生成 _worker.js 文件。"
          # 将最新标签名写入 version.txt
          echo "${{ env.latest_tag }}" > version.txt

      - name: 提交更改
        if: env.need_update == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # 提交 _worker.js 和 version.txt
          git add _worker.js version.txt
          git commit -m "Update _worker.js from zip to version ${{ env.latest_tag }}"
          git push
